https://www.geeksforgeeks.org/sorted-array-to-balanced-bst/

1) Get the Middle of the array and make it root.
2) Recursively do same for left half and right half.
      a) Get the middle of left half and make it left child of the root
          created in step 1.
      b) Get the middle of right half and make it right child of the
          root created in step 1.

***

struct s_node *createBST(int *arr, int n)
{ 
    struct s_node *root = makingBST(arr, 0, n - 1);
    return (root);
}

struct s_node *makingBST(int *arr, int start, int end)
{
    int mid;

    if (start > end) //base case
        return NULL;
    //get the middle->make it a root
    mid = (start + end) / 2;
    struct s_node *root = createNew(mid);
    root->left = makingBST(arr, start, mid -1);
    root->right = makingBST(arr, mid + 1, end);
    return (root);
}

struct s_node *createNew(int data)
{
    struct s_node *new = (struct s_node*)malloc(sizeof(struct s_node));
    new->value = data;
    new->left = NULL;
    new->right = NULL;
    return (new);
}